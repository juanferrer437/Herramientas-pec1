{"version":3,"sources":["node_modules/cookie-consent-js/src/cookie-consent.js","js/cookies.js"],"names":["cookieConsent","CookieConsent","privacyPolicyUrl","reset","alert"],"mappings":"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","file":"cookies.ccd7c767.js","sourceRoot":"..","sourcesContent":["/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cookie-consent-js\n * License: MIT, see file 'LICENSE'\n */\n\nfunction CookieConsent(props) {\n\n    var self = this\n    this.props = {\n        buttonPrimaryClass: \"btn btn-primary\", // the \"accept all\" buttons class, only used for styling\n        buttonSecondaryClass: \"btn btn-secondary\", // the \"accept necessary\" buttons class, only used for styling\n        privacyPolicyUrl: \"privacy-policy.html\",\n        autoShowModal: true, // disable autoShowModal on the privacy policy page, to make that page readable\n        lang: navigator.language, // the language, in which the modal is shown\n        blockAccess: false, // set \"true\" to block the access to the website before choosing a cookie configuration\n        position: \"right\", // position (\"left\" or \"right\"), if blockAccess is false\n        postSelectionCallback: undefined, // callback, after the user has made his selection\n        content: { // the content in all needed languages\n            de: {\n                title: \"Cookie-Einstellungen\",\n                body: \"Wir nutzen Cookies, um Inhalte zu personalisieren und die Zugriffe auf unsere Website zu analysieren. \" +\n                    \"Sie können wählen, ob Sie nur für die Funktion der Website notwendige Cookies akzeptieren oder auch \" +\n                    \"Tracking-Cookies zulassen möchten. Weitere Informationen finden Sie in unserer --privacy-policy--.\",\n                privacyPolicy: \"Datenschutzerklärung\",\n                buttonAcceptAll: \"Alle Cookies akzeptieren\",\n                buttonAcceptTechnical: \"Nur technisch notwendige Cookies akzeptieren\"\n            },\n            en: {\n                title: \"Cookie settings\",\n                body: \"We use cookies to personalize content and analyze access to our website. \" +\n                    \"You can choose whether you only accept cookies that are necessary for the functioning of the website \" +\n                    \"or whether you also want to allow tracking cookies. For more information, please refer to our --privacy-policy--.\",\n                privacyPolicy: \"privacy policy\",\n                buttonAcceptAll: \"Accept all cookies\",\n                buttonAcceptTechnical: \"Only accept technically necessary cookies\"\n            }\n        },\n        cookieName: \"cookie-consent-tracking-allowed\",  // the name of the cookie, the cookie is `true` if tracking was accepted\n        modalId: \"cookieConsentModal\" // the id of the modal dialog element\n    }\n    for (var property in props) {\n        // noinspection JSUnfilteredForInLoop\n        this.props[property] = props[property]\n    }\n    this.lang = this.props.lang\n    if (this.lang.indexOf(\"-\") !== -1) {\n        this.lang = this.lang.split(\"-\")[0]\n    }\n    if (this.props.content[this.lang] === undefined) {\n        this.lang = \"en\" // fallback\n    }\n    var _t = this.props.content[this.lang]\n    var linkPrivacyPolicy = '<a href=\"' + this.props.privacyPolicyUrl + '\">' + _t.privacyPolicy + '</a>'\n    var modalClass = \"cookie-consent-modal\"\n    if (this.props.blockAccess) {\n         modalClass += \" block-access\"\n    }\n    this.modalContent = '<div class=\"' + modalClass + '\">' +\n        '<div class=\"modal-content-wrap ' + this.props.position + '\">' +\n        '<div class=\"modal-content\">' +\n        '<div class=\"modal-header\">--header--</div>' +\n        '<div class=\"modal-body\">--body--</div>' +\n        '<div class=\"modal-footer\">--footer--</div>' +\n        '</div></div>'\n    this.modalContent = this.modalContent.replace(/--header--/, \"<h3 class=\\\"modal-title\\\">\" + _t.title + \"</h3>\")\n    this.modalContent = this.modalContent.replace(/--body--/,\n        _t.body.replace(/--privacy-policy--/, linkPrivacyPolicy)\n    )\n    this.modalContent = this.modalContent.replace(/--footer--/,\n        \"<div class='buttons'>\" +\n        \"<button class='btn-accept-necessary \" + this.props.buttonSecondaryClass + \"'>\" + _t.buttonAcceptTechnical + \"</button>\" +\n        \"<button class='btn-accept-all \" + this.props.buttonPrimaryClass + \"'>\" + _t.buttonAcceptAll + \"</button>\" +\n        \"</div>\"\n    )\n\n    function setCookie(name, value, days) {\n        var expires = \"\"\n        if (days) {\n            var date = new Date()\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000))\n            expires = \"; expires=\" + date.toUTCString()\n        }\n        document.cookie = name + \"=\" + (value || \"\") + expires + \"; Path=/; SameSite=Strict;\"\n    }\n\n    function getCookie(name) {\n        var nameEQ = name + \"=\"\n        var ca = document.cookie.split(';')\n        for (var i = 0; i < ca.length; i++) {\n            var c = ca[i]\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1, c.length)\n            }\n            if (c.indexOf(nameEQ) === 0) {\n                return c.substring(nameEQ.length, c.length)\n            }\n        }\n        return undefined\n    }\n\n    function removeCookie(name) {\n        document.cookie = name + '=; Path=/; SameSite=Strict; Expires=Thu, 01 Jan 1970 00:00:01 GMT;'\n    }\n\n    function documentReady(fn) {\n        if (document.readyState !== 'loading') {\n            fn()\n        } else {\n            document.addEventListener('DOMContentLoaded', fn)\n        }\n    }\n\n    function hideDialog() {\n        this.modal.style.display = \"none\"\n    }\n\n    function showDialog() {\n        documentReady(function () {\n            this.modal = document.getElementById(self.props.modalId)\n            if (!this.modal) {\n                this.modal = document.createElement(\"div\")\n                this.modal.id = self.props.modalId\n                this.modal.innerHTML = self.modalContent\n                document.body.append(this.modal)\n                this.modal.querySelector(\".btn-accept-necessary\").addEventListener(\"click\", function () {\n                    setCookie(self.props.cookieName, \"false\", 365)\n                    hideDialog()\n                    if(self.props.postSelectionCallback) {\n                        self.props.postSelectionCallback()\n                    }\n                })\n                this.modal.querySelector(\".btn-accept-all\").addEventListener(\"click\", function () {\n                    setCookie(self.props.cookieName, \"true\", 365)\n                    hideDialog()\n                    if(self.props.postSelectionCallback) {\n                        self.props.postSelectionCallback()\n                    }\n                })\n            } else {\n                this.modal.style.display = \"block\"\n            }\n        }.bind(this))\n    }\n\n    if (getCookie(this.props.cookieName) === undefined && this.props.autoShowModal) {\n        showDialog()\n    }\n\n    // API\n    this.reset = function () {\n        removeCookie(this.props.cookieName)\n        showDialog()\n    }\n\n    this.trackingAllowed = function () {\n        return getCookie(this.props.cookieName) === \"true\"\n    }\n\n}\n","import { CookieConsent } from 'cookie-consent-js/';\r\n\r\nvar cookieConsent = new CookieConsent({privacyPolicyUrl: \"/privacy-policy.html\"});\r\ncookieConsent.reset();\r\nalert(\"hola\");"]}