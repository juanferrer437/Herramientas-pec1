{"version":3,"sources":["node_modules/simple-slider/src/simpleslider.js","js/index.js"],"names":["getdef","val","def","len","arr","length","startSlides","containerElem","children","unit","startVal","visVal","trProp","style","imgs","i","position","top","left","zIndex","defaultEase","time","begin","change","duration","getSlider","options","actualIndex","interval","intervalStartTime","remainingTime","container","document","querySelector","prop","trTime","delay","init","show","endVal","end","paused","ease","onChange","onChangeEnd","now","Date","reset","overflow","display","resume","isAutoPlay","clearTimeout","setAutoPlayLoop","setTimeout","nextIndex","pause","reverse","newEndVal","Math","abs","newIndex","count","anim","insertElem","insertFrom","insertTo","removeElem","removeFrom","removeTo","transitionDuration","startTime","elapsedTime","easeFunc","setProp","elem","from","to","requestAnimationFrame","prevIndex","next","prev","dispose","removeEventListener","visibilityChange","currentIndex","hidden","addEventListener","internalState","getInterval","getRemainingTime","getImgs","getContainerElem","setActualIndex","getElementById"],"mappings":";AAAA,aAEA,SAASA,EAAOC,EAAKC,GACZD,OAAO,MAAPA,EAAcC,EAAMD,EAG7B,SAASE,EAAIC,GACJ,OAACA,GAAO,IAAIC,OAGrB,SAASC,EAAYC,EAAeC,EAAUC,EAAMC,EAAUC,EAAQC,GAChEC,IAAAA,EACFC,EAAO,GAEJN,IACHA,EAAWD,EAAcC,UAGvBO,IAAAA,EAAIZ,EAAIK,GAEL,OAAEO,GAAK,GACZD,EAAKC,GAAKP,EAASO,IACnBF,EAAQC,EAAKC,GAAGF,OACVG,SAAW,WACjBH,EAAMI,IACNJ,EAAMK,KACNL,EAAMM,OAAS,EACfN,EAAMD,GAAUF,EAAWD,EAMtBK,OAHPD,EAAMD,GAAUD,EAASF,EACzBI,EAAMM,OAAS,EAERL,EAGT,SAASM,EAAYC,EAAMC,EAAOC,EAAQC,GAChC,OAACH,GAAeG,EAAW,GAAM,EACrCD,EAAS,EAAIF,EAAOA,EAAOA,EAAOC,EAClCC,EAAS,IAAMF,GAAQ,GAAKA,EAAOA,EAAO,GAAKC,EAGrD,SAASG,EAAUC,GAEbC,IAAAA,EAAaC,EAAUC,EAAmBf,EAAMgB,EAGhDvB,EAAgBP,GAJpB0B,EAAUA,GAAW,IAIcK,UAAWC,SAASC,cAAc,0BACjErB,EAASZ,EAAO0B,EAAQQ,KAAM,QAC9BC,EAAyC,IAAhCnC,EAAO0B,EAAQF,SAAU,IAClCY,EAAmC,IAA3BpC,EAAO0B,EAAQU,MAAO,GAC9B3B,EAAOT,EAAO0B,EAAQjB,KAAM,KAC5BC,EAAWV,EAAO0B,EAAQW,MAAO,KACjC1B,EAASX,EAAO0B,EAAQY,KAAM,GAC9BC,EAASvC,EAAO0B,EAAQc,IAAK,KAC7BC,EAASf,EAAQe,OACjBC,EAAO1C,EAAO0B,EAAQgB,KAAMtB,GAC5BuB,EAAW3C,EAAO0B,EAAQiB,SAAU,GACpCC,EAAc5C,EAAO0B,EAAQkB,YAAa,GAC1CC,EAAMC,KAAKD,IAENE,SAAAA,IACH5C,GAAAA,EAAII,EAAcC,UAAY,EAAG,CAC/BK,IAAAA,EAAQN,EAAcM,MAC1BA,EAAMG,SAAW,WACjBH,EAAMmC,SAAW,SACjBnC,EAAMoC,QAAU,QAEhBnC,EAAOR,EAAYC,EAAemB,EAAQlB,SAAUC,EAAMC,EAAUC,EAAQC,GAC5Ee,EAAc,EACdG,EAAgBM,GAkBXc,SAAAA,IACHC,MACEvB,GACFwB,aAAaxB,GAhBVyB,SAAAA,IACPxB,EAAoBgB,IACpBjB,EAAW0B,WAAW,KACpBzB,EAAoBgB,IACpBf,EAAgBM,EAEhBb,EAAOgC,KAGPF,KACCvB,GASDuB,IAIKF,SAAAA,IACA,OAACV,GAAUtC,EAAIW,GAAQ,EAGvB0C,SAAAA,IACHL,MACFrB,EAAgBM,GAASS,IAAQhB,GACjCuB,aAAaxB,GACbA,EAAW,GAIN6B,SAAAA,IACDC,MAAAA,EAAYhD,EAClBA,EAAW6B,EACXA,EAASmB,EACT/B,EAAcgC,KAAKC,IAAIjC,GAAexB,EAAIW,GAAQ,IAClDA,EAAOA,EAAK2C,UAGLlC,SAAAA,EAAOsC,GACVC,IAAAA,EAAQ3D,EAAIW,GACT,OAAEgD,GAAS,GAChBhD,EAAKgD,GAAOjD,MAAMM,OAAS,EAG7BL,EAAK+C,GAAUhD,MAAMM,OAAS,EAC9BL,EAAKa,GAAad,MAAMM,OAAS,EAqE1B4C,SAAAA,EAAKC,EAAYC,EAAYC,EAAUC,EAAYC,EAAYC,EAAUC,EAAoBC,EAAWC,EAAaC,GACnHC,SAAAA,EAAQC,EAAMC,EAAMC,GAC3BF,EAAK/D,GACH6D,EAASD,EAAcD,EAAWK,EAAMC,EAAKD,EAAMN,GAAsB7D,EAGzE8D,GAAAA,EAAY,EAAG,CACbC,KAAAA,EAAcD,EAAYD,GAW5B,OAPAN,EAAWpD,GAAUsD,EAAWzD,EAChC0D,EAAWvD,GAAUyD,EAAW5D,OAE5BmC,GACFA,EAAYjB,EAAa4B,MAP3BmB,EAAQV,EAAYC,EAAYC,GAChCQ,EAAQP,EAAYC,EAAYC,GAapCS,sBAAsBzD,IAEF,IAAdkD,IACFA,EAAYlD,GAGd0C,EACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAlD,EACAoD,KAzGJV,CACEjD,EAAKa,GAAad,MAClBF,EACA4B,EACAzB,EAAK+C,GAAUhD,MACfH,EACAC,EACAwB,EAPE,EAAA,EAUFO,GAGFf,EAAckC,EAEVlB,GACFA,EAASoC,IAAapD,GAIjBqD,SAAAA,IACPzD,EAAOgC,KACPL,IAGO+B,SAAAA,IACP1D,EAAOwD,KACP7B,IAGOK,SAAAA,IACDM,MAAAA,EAAWlC,EAAc,EACxBkC,OAAAA,GAAY1D,EAAIW,GACnB,EACA+C,EAGGkB,SAAAA,IACDlB,MAAAA,EAAWlC,EAAc,EACxBkC,OAAAA,EAAW,EACd1D,EAAIW,GAAQ,EACZ+C,EAGGqB,SAAAA,IACP9B,aAAaxB,GACbI,SAASmD,oBAAoB,mBAAoBC,GAEjDtE,EACAP,EACAqB,EACAhB,EACAuB,EACAC,EACA1B,EACA6B,EACAE,EACAd,EACAG,EACAa,EACAC,EAAc,KAGPyC,SAAAA,IACA1D,OAAAA,EA8CAyD,SAAAA,IACHpD,SAASsD,OACX9B,IAEAN,IAaG,OARPlB,SAASuD,iBAAiB,mBAAoBH,GAC9CrC,IAEI5C,EAAIW,GAAQ,GACdoC,IAIK,CACLsC,cAAe,CACbC,YAAa,IAAM7D,EACnB8D,iBAAkB,IAAM5D,EACxB6D,QAAS,IAAM7E,EACf8E,iBAAkB,IAAMrF,EACxBsF,eAAgB5F,IAAS0B,EAAc1B,GACvCkD,WAAAA,EACA/B,YAAAA,EACA2B,MAAAA,EACAnC,OAAAA,EACAuB,OAAAA,EACAC,MAAAA,EACA3B,KAAAA,EACAC,SAAAA,EACAC,OAAAA,EACA4B,OAAAA,EACAE,OAAAA,EACAC,KAAAA,GAEF2C,aAAAA,EACA7B,MAAAA,EACAN,OAAAA,EACAK,UAAAA,EACAwB,UAAAA,EACAC,KAAAA,EACAC,KAAAA,EACA1D,OAAAA,EACAkC,QAAAA,EACAyB,QAAAA,GAgBH,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA;;ACzSD,aAFA,IAAA,EAAA,QAAA,mCAEA,EAAU,EAAA,WAAA,CACNnD,UAAWC,SAAS8D,eAAe,YACnC5D,KAAM,OACNG,MAAO,IACPC,KAAM,EACNE,IAAK,IACL/B,KAAM","file":"js.d7c7d172.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nfunction getdef(val, def) {\n  return val == null ? def : val; // eslint-disable-line\n}\n\nfunction len(arr) {\n  return (arr || []).length;\n}\n\nfunction startSlides(containerElem, children, unit, startVal, visVal, trProp) {\n  let style,\n    imgs = [];\n\n  if (!children) {\n    children = containerElem.children;\n  }\n\n  let i = len(children);\n\n  while (--i >= 0) {\n    imgs[i] = children[i];\n    style = imgs[i].style;\n    style.position = 'absolute';\n    style.top =\n    style.left =\n    style.zIndex = 0;\n    style[trProp] = startVal + unit;\n  }\n\n  style[trProp] = visVal + unit;\n  style.zIndex = 1;\n\n  return imgs;\n}\n\nfunction defaultEase(time, begin, change, duration) {\n  return ((time = time / (duration / 2)) < 1) // eslint-disable-line\n    ? change / 2 * time * time * time + begin // eslint-disable-line\n    : change / 2 * ((time -= 2) * time * time + 2) + begin; // eslint-disable-line\n}\n\nfunction getSlider(options) {\n  options = options || {};\n  let actualIndex, interval, intervalStartTime, imgs, remainingTime;\n\n  // Get user defined options or its default values\n  let containerElem = getdef(options.container, document.querySelector('*[data-simple-slider]'));\n  let trProp = getdef(options.prop, 'left');\n  let trTime = getdef(options.duration, 0.5) * 1000;\n  let delay = getdef(options.delay, 3) * 1000;\n  let unit = getdef(options.unit, '%');\n  let startVal = getdef(options.init, -100);\n  let visVal = getdef(options.show, 0);\n  let endVal = getdef(options.end, 100);\n  let paused = options.paused;\n  let ease = getdef(options.ease, defaultEase);\n  let onChange = getdef(options.onChange, 0);\n  let onChangeEnd = getdef(options.onChangeEnd, 0);\n  let now = Date.now;\n\n  function reset() {\n    if (len(containerElem.children) > 0) {\n      let style = containerElem.style;\n      style.position = 'relative';\n      style.overflow = 'hidden';\n      style.display = 'block';\n\n      imgs = startSlides(containerElem, options.children, unit, startVal, visVal, trProp);\n      actualIndex = 0;\n      remainingTime = delay;\n    }\n  }\n\n  // Slideshow/autoPlay timing logic\n  function setAutoPlayLoop() {\n    intervalStartTime = now();\n    interval = setTimeout(() => {\n      intervalStartTime = now();\n      remainingTime = delay; // resets time, used by pause/resume logic\n\n      change(nextIndex());\n\n      // loops\n      setAutoPlayLoop();\n    }, remainingTime);\n  }\n\n  function resume() {\n    if (isAutoPlay()) {\n      if (interval) {\n        clearTimeout(interval);\n      }\n\n      setAutoPlayLoop();\n    }\n  }\n\n  function isAutoPlay() {\n    return !paused && len(imgs) > 1;\n  }\n\n  function pause() {\n    if (isAutoPlay()) {\n      remainingTime = delay - (now() - intervalStartTime);\n      clearTimeout(interval);\n      interval = 0;\n    }\n  }\n\n  function reverse() {\n    const newEndVal = startVal;\n    startVal = endVal;\n    endVal = newEndVal;\n    actualIndex = Math.abs(actualIndex - (len(imgs) - 1));\n    imgs = imgs.reverse();\n  }\n\n  function change(newIndex) {\n    let count = len(imgs);\n    while (--count >= 0) {\n      imgs[count].style.zIndex = 1;\n    }\n\n    imgs[newIndex].style.zIndex = 3;\n    imgs[actualIndex].style.zIndex = 2;\n\n    anim(\n      imgs[actualIndex].style, // insertElem\n      visVal, // insertFrom\n      endVal, // insertTo\n      imgs[newIndex].style, // removeElem\n      startVal, // removeFrom\n      visVal, // removeTo\n      trTime, // transitionDuration\n      0, // startTime\n      0, // elapsedTime\n      ease // easeFunc\n    );\n\n    actualIndex = newIndex;\n\n    if (onChange) {\n      onChange(prevIndex(), actualIndex);\n    }\n  }\n\n  function next() {\n    change(nextIndex());\n    resume();\n  }\n\n  function prev() {\n    change(prevIndex());\n    resume();\n  }\n\n  function nextIndex() {\n    const newIndex = actualIndex + 1;\n    return newIndex >= len(imgs)\n      ? 0\n      : newIndex;\n  }\n\n  function prevIndex() {\n    const newIndex = actualIndex - 1;\n    return newIndex < 0\n      ? len(imgs) - 1\n      : newIndex;\n  }\n\n  function dispose() {\n    clearTimeout(interval);\n    document.removeEventListener('visibilitychange', visibilityChange);\n\n    imgs =\n    containerElem =\n    interval =\n    trProp =\n    trTime =\n    delay =\n    startVal =\n    endVal =\n    paused =\n    actualIndex =\n    remainingTime =\n    onChange =\n    onChangeEnd = null;\n  }\n\n  function currentIndex() {\n    return actualIndex;\n  }\n\n  function anim(insertElem, insertFrom, insertTo, removeElem, removeFrom, removeTo, transitionDuration, startTime, elapsedTime, easeFunc) {\n    function setProp(elem, from, to) {\n      elem[trProp] =\n        easeFunc(elapsedTime - startTime, from, to - from, transitionDuration) + unit;\n    }\n\n    if (startTime > 0) {\n      if (elapsedTime - startTime < transitionDuration) {\n        setProp(insertElem, insertFrom, insertTo);\n        setProp(removeElem, removeFrom, removeTo);\n      } else {\n        insertElem[trProp] = insertTo + unit;\n        removeElem[trProp] = removeTo + unit;\n\n        if (onChangeEnd) {\n          onChangeEnd(actualIndex, nextIndex());\n        }\n\n        return;\n      }\n    }\n\n    requestAnimationFrame(time => {\n      // Starts time in the first anim iteration\n      if (startTime === 0) {\n        startTime = time;\n      }\n\n      anim(\n        insertElem,\n        insertFrom,\n        insertTo,\n        removeElem,\n        removeFrom,\n        removeTo,\n        transitionDuration,\n        startTime,\n        time,\n        easeFunc\n      );\n    });\n  }\n\n  function visibilityChange() {\n    if (document.hidden) {\n      pause();\n    } else {\n      resume();\n    }\n  }\n\n  // configures visibility api handler https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\n  document.addEventListener('visibilitychange', visibilityChange);\n  reset();\n\n  if (len(imgs) > 1) {\n    resume();\n  }\n\n  \"#if TEST > 0\"; // eslint-disable-line\n  return {\n    internalState: {\n      getInterval: () => interval,\n      getRemainingTime: () => remainingTime,\n      getImgs: () => imgs,\n      getContainerElem: () => containerElem,\n      setActualIndex: val => { actualIndex = val; },\n      isAutoPlay,\n      defaultEase,\n      reset,\n      trProp,\n      trTime,\n      delay,\n      unit,\n      startVal,\n      visVal,\n      endVal,\n      paused,\n      ease\n    },\n    currentIndex,\n    pause,\n    resume,\n    nextIndex,\n    prevIndex,\n    next,\n    prev,\n    change,\n    reverse,\n    dispose\n  };\n  \"#else\"; // eslint-disable-line\n  return {\n    currentIndex,\n    pause,\n    resume,\n    nextIndex,\n    prevIndex,\n    next,\n    prev,\n    change,\n    reverse,\n    dispose\n  };\n  \"#endif\"; // eslint-disable-line\n}\n\nexport {getSlider};\n\n","import { getSlider } from 'simple-slider/src/simpleslider';\r\n \r\ngetSlider({\r\n    container: document.getElementById('myslider'),\r\n    prop: 'left',\r\n    init: -612,\r\n    show: 0,\r\n    end: 612,\r\n    unit: 'px'\r\n  });\r\n\r\n\r\n"]}